{"version":3,"sources":["lib/Deck/_types.ts","components/Card/Card.tsx","lib/Deck/Deck.ts","pages/Settings/Settings.tsx","pages/Game/Game.tsx","App/App.tsx","reportWebVitals.js","index.tsx"],"names":["Color","Card","card","forvardedRef","onTransitionEnd","isBack","isEnableHint","className","ref","style","color","undefined","value","rule","CardValues","CardHint","cardSuits","Black","Red","extendedCardValues","cardValues","deck","shuffleDeck","j","temp","i","length","Math","floor","random","Game","isExtendedDeck","useState","setDeck","shouldShowBackCard","setShouldShowBackCard","cardRef","useRef","initGame","isExtended","values","forEach","suit","push","initDeck","handleClickReload","useEffect","onClick","current","transform","transition","newDeck","splice","Settings","onChangeCardValues","onChangeCardHint","onClose","shouldShowHint","setShouldShowHint","Extended","Default","setCardValues","Enable","Disable","shouldShowCardHint","setShouldShowCardHint","onAnimationEnd","onChange","event","target","isEnable","App","setIsExtendedDeck","shouldShowSettings","setShouldShowSettings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f9a6788.chunk.js","sourcesContent":["export enum Color {\n  Black = \"#000\",\n  Red = \"#f00\",\n}\n\nexport type CardSuit = {\n  value: string;\n  color: Color;\n};\n\nexport type CardValue = {\n  value: string;\n  rule: string;\n};\n\nexport type Card = {\n  value: string;\n  color: Color;\n  rule: string;\n};\n","import React, { FC, Ref } from \"react\";\nimport { Card as CardType } from \"../../lib/Deck\";\nimport \"./Card.css\";\n\ntype Props = {\n  card?: CardType;\n  forvardedRef?: Ref<HTMLDivElement>;\n  onTransitionEnd?(): void;\n  isBack?: boolean;\n  isEnableHint?: boolean;\n};\n\nexport const Card: FC<Props> = ({\n  card,\n  forvardedRef,\n  onTransitionEnd,\n  isBack,\n  isEnableHint,\n}) => {\n  const getCardStyle = () => (card ? { color: card.color } : undefined);\n\n  return (\n    <div\n      className=\"card\"\n      ref={forvardedRef}\n      onTransitionEnd={onTransitionEnd}\n      style={getCardStyle()}\n    >\n      {isBack && <div className=\"card__back\" />}\n      {card && !isBack && (\n        <>\n          <div className=\"card__mark\">{card.value}</div>\n          {isEnableHint && <div className=\"card__rule\">{card.rule}</div>}\n          <div className=\"card__mark card__mark--revert\">{card.value}</div>\n        </>\n      )}\n    </div>\n  );\n};\n","import { Card, CardSuit, CardValue, Color } from \"./_types\";\n\nconst cardSuits: Array<CardSuit> = [\n  {\n    value: \"♠\",\n    color: Color.Black,\n  },\n  {\n    value: \"♣\",\n    color: Color.Black,\n  },\n  {\n    value: \"♥\",\n    color: Color.Red,\n  },\n  {\n    value: \"♦\",\n    color: Color.Red,\n  },\n];\n\nconst extendedCardValues: Array<CardValue> = [\n  {\n    value: \"2\",\n    rule: \"Ничего\",\n  },\n  {\n    value: \"3\",\n    rule: \"Ничего\",\n  },\n  {\n    value: \"4\",\n    rule: \"Ничего\",\n  },\n  {\n    value: \"5\",\n    rule: \"Ничего\",\n  },\n];\n\nconst cardValues: Array<CardValue> = [\n  {\n    value: \"6\",\n    rule: \"Ничего\",\n  },\n  {\n    value: \"7\",\n    rule: \"Считаем (кроме семерок)\",\n  },\n  {\n    value: \"8\",\n    rule: \"Пей и выбирай с кем\",\n  },\n  {\n    value: \"9\",\n    rule: \"Действие перед тем как выпить\",\n  },\n  {\n    value: \"10\",\n    rule: \"Задавай вопросы на зло другим\",\n  },\n  {\n    value: \"J\",\n    rule: \"Категория\",\n  },\n  {\n    value: \"Q\",\n    rule: \"Реакция. Кто последний, тот пьет\",\n  },\n  {\n    value: \"K\",\n    rule: \"Выбирай кто пьет\",\n  },\n  {\n    value: \"A\",\n    rule: \"Пей сам\",\n  },\n];\n\nlet deck: Array<Card> = [];\n\nexport const getDeck = () => deck;\n\nexport const initDeck = (isExtended: boolean) => {\n  deck = [];\n  const values = isExtended\n    ? [...extendedCardValues, ...cardValues]\n    : cardValues;\n\n  cardSuits.forEach((suit) => {\n    values.forEach((value) => {\n      deck.push({\n        value: `${value.value}${suit.value}`,\n        rule: value.rule,\n        color: suit.color,\n      });\n    });\n  });\n  shuffleDeck();\n};\n\nconst shuffleDeck = () => {\n  var j, temp;\n  for (var i = deck.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = deck[j];\n    deck[j] = deck[i];\n    deck[i] = temp;\n  }\n};\n\nexport const getTotalCardInDeck = () => {\n  return deck.length;\n};\n","import React, { FC, useState } from \"react\";\nimport { ChangeEvent } from \"react\";\nimport \"./Settings.css\";\n\ntype Props = {\n  isExtended: boolean;\n  isEnableHint: boolean;\n  onChangeCardValues?: (isExtended: boolean) => void;\n  onChangeCardHint?: (isEnable: boolean) => void;\n  onClose?: () => void;\n};\n\nenum CardValues {\n  Extended = \"cardValue52\",\n  Default = \"cardValue36\",\n}\n\nenum CardHint {\n  Enable = \"cardHintEnable\",\n  Disable = \"cardHintDisable\",\n}\n\nexport const Settings: FC<Props> = ({\n  isExtended,\n  isEnableHint,\n  onChangeCardValues,\n  onChangeCardHint,\n  onClose,\n}) => {\n  const [shouldShowHint, setShouldShowHint] = useState(false);\n\n  const [cardValues, setCardValues] = useState(\n    isExtended ? CardValues.Extended : CardValues.Default\n  );\n  const [shouldShowCardHint, setShouldShowCardHint] = useState(\n    isEnableHint ? CardHint.Enable : CardHint.Disable\n  );\n\n  const handleChangeCardValues = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { target } = event;\n    const isExtended = target.value === CardValues.Extended;\n    setCardValues(target.value as CardValues);\n    onChangeCardValues?.(isExtended);\n    setShouldShowHint(true);\n  };\n\n  const handleChangeCardHint = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { target } = event;\n    const isEnable = target.value === CardHint.Enable;\n    setShouldShowCardHint(target.value as CardHint);\n    onChangeCardHint?.(isEnable);\n    setShouldShowHint(true);\n  };\n\n  const handleHideHint = () => setShouldShowHint(false);\n\n  return (\n    <div className=\"settings\">\n      <button className=\"settings__close\" onClick={onClose}>\n        ×\n      </button>\n      <div\n        className={`settings__hint ${shouldShowHint && \"settings__hint--show\"}`}\n        onAnimationEnd={handleHideHint}\n      >\n        Настройки сохранены\n      </div>\n      <form className=\"settings__form\">\n        <label className=\"settings__lebel\">\n          Кол-во карт в колоде:\n          <select\n            value={cardValues}\n            onChange={handleChangeCardValues}\n            className=\"settings__select\"\n          >\n            <option value={CardValues.Default}>36</option>\n            <option value={CardValues.Extended}>52</option>\n          </select>\n        </label>\n\n        <label className=\"settings__lebel\">\n          Отображение подсказок:\n          <select\n            value={shouldShowCardHint}\n            onChange={handleChangeCardHint}\n            className=\"settings__select\"\n          >\n            <option value={CardHint.Enable}>Вкл</option>\n            <option value={CardHint.Disable}>Выкл</option>\n          </select>\n        </label>\n      </form>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { Card } from \"../../components/Card\";\nimport { Card as CardType, getDeck, initDeck } from \"../../lib/Deck\";\nimport \"./Game.css\";\n\ntype Props = {\n  isExtendedDeck?: boolean;\n  isEnableHint?: boolean;\n};\n\nexport const Game: FC<Props> = ({\n  isExtendedDeck = false,\n  isEnableHint = true,\n}) => {\n  const [deck, setDeck] = useState<Array<CardType>>([]);\n  const [shouldShowBackCard, setShouldShowBackCard] = useState(true);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  const initGame = () => {\n    initDeck(isExtendedDeck);\n    setDeck(getDeck());\n  };\n\n  const handleClickReload = () => {\n    setShouldShowBackCard(true);\n    initGame();\n  };\n\n  useEffect(initGame, []);\n\n  useEffect(handleClickReload, [isExtendedDeck]);\n\n  const handleClickCard = () => {\n    if (cardRef.current) {\n      cardRef.current.style.transform = \"translateX(110%)\";\n      cardRef.current.style.transition = \"transform 200ms ease-in-out\";\n    }\n  };\n\n  const handleClickBackCard = () => {\n    setShouldShowBackCard(false);\n  };\n\n  const onTransitionEnd = () => {\n    if (cardRef.current) {\n      cardRef.current.style.transform = \"\";\n      cardRef.current.style.transition = \"\";\n    }\n    const newDeck = [...deck];\n    newDeck.splice(0, 1);\n    setDeck(newDeck);\n  };\n\n  return (\n    <div className=\"game\">\n      <button className=\"game__reload\" onClick={handleClickReload}>\n        Сначала\n      </button>\n      {deck.length > 0 && (\n        <div className=\"game__card\" onClick={handleClickCard}>\n          {deck[1] && <Card card={deck[1]} isEnableHint={isEnableHint} />}\n\n          {deck[0] && (\n            <Card\n              card={deck[0]}\n              forvardedRef={cardRef}\n              onTransitionEnd={onTransitionEnd}\n              isEnableHint={isEnableHint}\n            />\n          )}\n        </div>\n      )}\n\n      {shouldShowBackCard && (\n        <div className=\"game__card\" onClick={handleClickBackCard}>\n          <Card isBack />\n        </div>\n      )}\n\n      <div className=\"game__card-counter\">{deck.length}</div>\n    </div>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { Game } from \"../pages/Game\";\nimport { Settings } from \"../pages/Settings\";\nimport \"./App.css\";\n\nexport const App: FC = () => {\n  const [isExtendedDeck, setIsExtendedDeck] = useState(false);\n  const [shouldShowCardHint, setShouldShowCardHint] = useState(true);\n  const [shouldShowSettings, setShouldShowSettings] = useState(false);\n\n  const handleChangeCardValues = (isExtended: boolean) =>\n    setIsExtendedDeck(isExtended);\n  const handleChangeCardHint = (isEnable: boolean) =>\n    setShouldShowCardHint(isEnable);\n\n  const handleOpenSettings = () => setShouldShowSettings(true);\n  const handleCloseSettings = () => setShouldShowSettings(false);\n\n  return (\n    <div className=\"app\">\n      <button className=\"app__settings\" onClick={handleOpenSettings}>\n        ⚙\n      </button>\n      <Game isExtendedDeck={isExtendedDeck} isEnableHint={shouldShowCardHint} />\n      {shouldShowSettings && (\n        <Settings\n          isExtended={isExtendedDeck}\n          isEnableHint={shouldShowCardHint}\n          onChangeCardHint={handleChangeCardHint}\n          onChangeCardValues={handleChangeCardValues}\n          onClose={handleCloseSettings}\n        />\n      )}\n    </div>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}